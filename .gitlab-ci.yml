stages:
  - test

default:               # Add a default section to define the `image` keyword's default value
  image: ubuntu:22.04

.standard-rules:       # Make a hidden job to hold the common rules
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  artifacts:
    paths:
      - "build/*/*.tar.gz"

.setup_linux: &setup_linux |
  DEBIAN_FRONTEND=noninteractive

  # XXX WHY? set time-zone
  # TZ=Canada/Pacific
  # ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

  # for downloading
  apt-get update -qq
  apt-get install -y --no-install-recommends curl gnupg ca-certificates python3-pip

.setup_cpp: &setup_cpp |
  curl -LJO "https://github.com/aminya/setup-cpp/releases/download/v0.33.0/setup-cpp-x64-linux"
  chmod +x setup-cpp-x64-linux
  ./setup-cpp-x64-linux --compiler $compiler --ccache true --vcpkg true # XXX --task true --gcovr true
  source ~/.cpprc
  pwd && mkdir -p build/coverage
  python3 -m pip install cmake ninja gcovr
  cmake --version
  ninja --version

# XXX not longer used! CK
.task: &test |
  task coverage
  task coverage_release
  task install

test_linux_llvm:
  stage: test
  extends:
    - .standard-rules  # Reuse the configuration in `.standard-rules` here
  variables:
    compiler: llvm
  script:
    - *setup_linux
    - *setup_cpp
    - cmake --workflow --preset clang-debug
    - gcovr .
    - cmake --workflow --preset clang-release

test_linux_gcc:
  stage: test
  extends:
    - .standard-rules  # Reuse the configuration in `.standard-rules` here
  variables:
    compiler: gcc
  script:
    - *setup_linux
    - *setup_cpp
    - cmake --workflow --preset gcc-debug
    - gcovr .
    - cmake --workflow --preset gcc-release
